{"version":3,"sources":["PennyHeader.jsx","PennySearch.jsx","PennyFooter.jsx","index.js"],"names":["PennyHeader","useState","Date","datetime","setDatetime","useEffect","window","setInterval","ampm","getHours","PennySearch","books","setBooks","inputValue","setInputValue","controller","AbortController","encodedAuthor","encodeURIComponent","fetch","signal","then","resp","text","catch","error","console","log","abort","type","onInput","event","author","target","value","autoFocus","dangerouslySetInnerHTML","__html","PennyFooter","toLocaleString","href","ReactDOM","render","document","getElementById"],"mappings":"yJAOe,SAASA,IAErB,MAAgCC,mBAAS,IAAIC,MAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAIAC,qBAAW,WACRC,OAAOC,aAAa,WAAOH,EAAY,IAAIF,QAAW,OACtD,IAIH,IACIM,EAAO,UAGX,OAJcL,EAASM,YAEV,KAAID,EAAO,aAGrB,gCACG,uBACC,QAAUA,EAAO,4BAClB,0BCnBM,SAASE,IAErB,MAA0BT,mBAAS,IAAnC,mBAAOU,EAAP,KAAcC,EAAd,KAEA,EAAoCX,mBAAS,IAA7C,mBAAOY,EAAP,KAAmBC,EAAnB,KAuBA,OAnBAT,qBAAW,WACR,IAAMU,EAAa,IAAIC,gBAEnBC,EAAgBC,mBAAmBL,GAWvC,OARAM,MAFU,yBAA2BF,EAE1B,CAACG,OAAQL,EAAWK,SAC3BC,MAAK,SAACC,GAAU,OAAOA,EAAKC,UAC5BF,MAAK,SAACE,GAAUX,EAASW,MACzBC,OAAM,SAACC,GAAW,OAAOC,QAAQC,IAAIF,MAKlC,kBAAMV,EAAWa,WAGxB,CAACf,IAGD,gCACI,+CACC,gCACD,uBACIgB,KAAK,OACLC,QAAW,SAACC,GACT,IAAIC,EAASD,EAAME,OAAOC,MAC1BpB,EAAckB,IAEjBG,WAAS,IACb,uBAEA,qBAAKC,wBACA,CAACC,OAAQ1B,QC3CT,SAAS2B,IAErB,MAAgCrC,mBAAS,IAAIC,MAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OAJAC,qBAAW,WACRC,OAAOC,aAAa,WAAOH,EAAY,IAAIF,QAAW,OACtD,IAGH,gCACG,uBACC,kBAAoBC,EAASoC,iBAC9B,uBACC,cACD,mBAAGC,KAAK,yCAAR,4BCXNC,IAASC,OACL,gCACI,cAAC1C,EAAD,IACA,cAACU,EAAD,IACA,cAAC4B,EAAD,OAEJK,SAASC,eAAe,W","file":"static/js/main.62c40fa3.chunk.js","sourcesContent":["//----------------------------------------------------------------------\n// PennyHeader.jsx\n// Author: Liam Esparraguera\n//----------------------------------------------------------------------\n\nimport { useEffect, useState } from 'react';\n\nexport default function PennyHeader() {\n   // initialize datetime to new Date object\n   const [datetime, setDatetime] = useState(new Date());\n\n   // effect hook with empty dependency array (second argument)\n   // specifies function that runs on component mount\n   useEffect( () => {\n      window.setInterval( () => {setDatetime(new Date())} , 1000);\n   }, []);\n\n   // on each render, functional component's body is re-executed, \n   // and so \"Good [morning/afternoon]\" message is updated\n   const hours = datetime.getHours();\n   let ampm = 'morning';\n   if (hours >= 12) ampm = 'afternoon';\n\n   return (\n      <div>\n         <hr />\n         {'Good ' + ampm + ' and welcome to Penny.com'}\n         <hr />\n      </div>\n   );\n}\n","//----------------------------------------------------------------------\n// PennySearch.jsx\n// Authors: Liam Esparraguera and Bob Dondero\n//----------------------------------------------------------------------\n\n// note import destructuring\nimport { useEffect, useState } from 'react';\n\nexport default function PennySearch() {\n   // initialize books to empty array\n   const [books, setBooks] = useState([]);\n\n   const [inputValue, setInputValue] = useState('');\n\n   // dependency array contains only inputValue, as this is the state variable\n   // on whose change we want to re-fetch data. \n   useEffect( () => {\n      const controller = new AbortController();\n\n      let encodedAuthor = encodeURIComponent(inputValue);\n      let url = '/searchresults?author=' + encodedAuthor;\n\n      fetch(url, {signal: controller.signal})\n         .then((resp) => {return resp.text();})\n         .then((text) => {setBooks(text);})\n         .catch((error) => {return console.log(error);});\n\n      // callback function returns another function, the cleanup function.\n      // the cleanup function runs on component unmount and between every\n      // component re-render and the subsequent useEffect call. \n      return () => controller.abort()\n      // so, when we change input, the cleanup function aborts the old controller\n      // before the effect is rerun and a new controller and http request are made.\n   }, [inputValue]);\n\n   return (\n      <div>\n          <h1>Author Search</h1>\n          {'Please enter an author name: '}\n          <input\n              type='text'\n              onInput={ ((event) => {\n                 let author = event.target.value;\n                 setInputValue(author);\n              })}\n              autoFocus />\n          <hr />\n\n          <div dangerouslySetInnerHTML=\n             { {__html: books} }/>\n\n      </div>\n   );\n}","//----------------------------------------------------------------------\n// PennyFooter.jsx\n// Author: Liam Esparraguera\n//----------------------------------------------------------------------\nimport { useEffect, useState } from 'react'\n\nexport default function PennyFooter() {\n   // initialize datetime to new Date object\n   const [datetime, setDatetime] = useState(new Date());\n\n   // effect hook with empty dependency array (second argument)\n   // specifies function that runs on component mount\n   useEffect( () => {\n      window.setInterval( () => {setDatetime(new Date())} , 1000);\n   }, []);\n\n   return (\n   <div>\n      <hr />\n      {'Date and time: ' + datetime.toLocaleString()}\n      <br />\n      {'Created by '}\n      <a href=\"https://www.cs.princeton.edu/~rdondero\">\n      Bob Dondero</a>\n   </div>\n   )\n\n}\n\n","//----------------------------------------------------------------------\n// main.js\n// Author: Lucas Manning\n//----------------------------------------------------------------------\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PennyHeader from './PennyHeader.jsx';\nimport PennySearch from './PennySearch.jsx';\nimport PennyFooter from './PennyFooter.jsx';\n\nReactDOM.render(\n    <div>\n        <PennyHeader />\n        <PennySearch />\n        <PennyFooter />\n    </div>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}